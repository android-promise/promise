// Generated by Dagger (https://google.github.io/dagger).
package promise.app_base;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import promise.Promise;

public final class DependenciesModule_ProvidePromiseFactory implements Factory<Promise> {
  private static final DependenciesModule_ProvidePromiseFactory INSTANCE = new DependenciesModule_ProvidePromiseFactory();

  @Override
  public Promise get() {
    return providePromise();
  }

  public static DependenciesModule_ProvidePromiseFactory create() {
    return INSTANCE;
  }

  public static Promise providePromise() {
    return Preconditions.checkNotNull(DependenciesModule.providePromise(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
