// Generated by Dagger (https://google.github.io/dagger).
package promise.app_base.repos;

import dagger.MembersInjector;
import javax.inject.Provider;
import promise.app_base.data.net.AuthApi;

public final class AuthRepository_MembersInjector implements MembersInjector<AuthRepository> {
  private final Provider<AuthApi> authApiProvider;

  public AuthRepository_MembersInjector(Provider<AuthApi> authApiProvider) {
    this.authApiProvider = authApiProvider;
  }

  public static MembersInjector<AuthRepository> create(Provider<AuthApi> authApiProvider) {
    return new AuthRepository_MembersInjector(authApiProvider);}

  @Override
  public void injectMembers(AuthRepository instance) {
    injectAuthApi(instance, authApiProvider.get());
  }

  public static void injectAuthApi(AuthRepository instance, AuthApi authApi) {
    instance.authApi = authApi;
  }
}
