// Generated by Dagger (https://google.github.io/dagger).
package promise.app_base.models.di;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class DieselEngine_Factory implements Factory<DieselEngine> {
  private final Provider<Integer> horsePowerProvider;

  public DieselEngine_Factory(Provider<Integer> horsePowerProvider) {
    this.horsePowerProvider = horsePowerProvider;
  }

  @Override
  public DieselEngine get() {
    return new DieselEngine(horsePowerProvider.get());
  }

  public static DieselEngine_Factory create(Provider<Integer> horsePowerProvider) {
    return new DieselEngine_Factory(horsePowerProvider);
  }

  public static DieselEngine newInstance(int horsePower) {
    return new DieselEngine(horsePower);
  }
}
